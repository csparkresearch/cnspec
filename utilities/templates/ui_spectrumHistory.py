# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'spectrumHistory.ui'
#
# Created by: PyQt5 UI code generator 5.10.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_DockWidget(object):
    def setupUi(self, DockWidget):
        DockWidget.setObjectName("DockWidget")
        DockWidget.resize(389, 492)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(DockWidget.sizePolicy().hasHeightForWidth())
        DockWidget.setSizePolicy(sizePolicy)
        DockWidget.setMaximumSize(QtCore.QSize(524287, 524287))
        DockWidget.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/control/plots.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        DockWidget.setWindowIcon(icon)
        DockWidget.setWindowOpacity(0.8)
        self.dockWidgetContents = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dockWidgetContents.sizePolicy().hasHeightForWidth())
        self.dockWidgetContents.setSizePolicy(sizePolicy)
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.gridLayout = QtWidgets.QGridLayout(self.dockWidgetContents)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setHorizontalSpacing(3)
        self.gridLayout.setVerticalSpacing(1)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton = QtWidgets.QPushButton(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 1, 1, 1, 1)
        self.optionButton = QtWidgets.QPushButton(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.optionButton.sizePolicy().hasHeightForWidth())
        self.optionButton.setSizePolicy(sizePolicy)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/control/settings.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.optionButton.setIcon(icon1)
        self.optionButton.setObjectName("optionButton")
        self.gridLayout.addWidget(self.optionButton, 5, 0, 1, 2)
        self.pushButton_2 = QtWidgets.QPushButton(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout.addWidget(self.pushButton_2, 2, 1, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout.addWidget(self.pushButton_3, 3, 1, 1, 1)
        self.analysisBrowser = QtWidgets.QTextBrowser(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.analysisBrowser.sizePolicy().hasHeightForWidth())
        self.analysisBrowser.setSizePolicy(sizePolicy)
        self.analysisBrowser.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.analysisBrowser.setObjectName("analysisBrowser")
        self.gridLayout.addWidget(self.analysisBrowser, 4, 1, 1, 1)
        self.differentialSpectrum = QtWidgets.QCheckBox(self.dockWidgetContents)
        self.differentialSpectrum.setObjectName("differentialSpectrum")
        self.gridLayout.addWidget(self.differentialSpectrum, 0, 1, 1, 1)
        self.thumbs = QtWidgets.QListWidget(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.thumbs.sizePolicy().hasHeightForWidth())
        self.thumbs.setSizePolicy(sizePolicy)
        self.thumbs.setMinimumSize(QtCore.QSize(140, 0))
        self.thumbs.setMaximumSize(QtCore.QSize(140, 16777215))
        self.thumbs.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.thumbs.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.thumbs.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.thumbs.setAutoScroll(True)
        self.thumbs.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.thumbs.setIconSize(QtCore.QSize(120, 120))
        self.thumbs.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.thumbs.setMovement(QtWidgets.QListView.Static)
        self.thumbs.setFlow(QtWidgets.QListView.LeftToRight)
        self.thumbs.setProperty("isWrapping", True)
        self.thumbs.setResizeMode(QtWidgets.QListView.Adjust)
        self.thumbs.setLayoutMode(QtWidgets.QListView.SinglePass)
        self.thumbs.setViewMode(QtWidgets.QListView.IconMode)
        self.thumbs.setObjectName("thumbs")
        self.gridLayout.addWidget(self.thumbs, 0, 0, 5, 1)
        DockWidget.setWidget(self.dockWidgetContents)

        self.retranslateUi(DockWidget)
        self.pushButton_3.clicked.connect(DockWidget.make3D)
        self.pushButton_2.clicked.connect(DockWidget.gaussianTailAnalysis)
        self.pushButton.clicked.connect(DockWidget.gaussianAnalysis)
        QtCore.QMetaObject.connectSlotsByName(DockWidget)

    def retranslateUi(self, DockWidget):
        _translate = QtCore.QCoreApplication.translate
        DockWidget.setToolTip(_translate("DockWidget", "Spectra which have been periodically recorded"))
        DockWidget.setWindowTitle(_translate("DockWidget", "Spectrum History"))
        self.pushButton.setText(_translate("DockWidget", "Gaussian Analysis"))
        self.optionButton.setText(_translate("DockWidget", "Options"))
        self.pushButton_2.setText(_translate("DockWidget", "Gaussian+Tail Analysis"))
        self.pushButton_3.setText(_translate("DockWidget", "3D Plot"))
        self.differentialSpectrum.setToolTip(_translate("DockWidget", "<html><head/><body><p>The calculations will be carried out on</p><p>individual contributions of each spectrum.</p><p>Y<span style=\" vertical-align:super;\">\'</span><span style=\" vertical-align:sub;\">n</span> = Y<span style=\" vertical-align:sub;\">n</span> - Y<span style=\" vertical-align:sub;\">n-1</span></p><p>This way, the cumulative effect is ignored,</p><p>and the individual behaviour of each spectrum</p><p>can be analyzed without clearing it each time.</p></body></html>"))
        self.differentialSpectrum.setText(_translate("DockWidget", "Differential Spectra"))

from . import res_rc
